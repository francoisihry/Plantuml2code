Plant:
    '@startuml'  (classes+=Class |  packages+=Package | enums+=Enum |relations+=Relation)* '@enduml'
;

Relation:
    (Heritage|Composition)
;

Composition:
    contenant=[Class] ('*--'|(range_contenant=Range '*--'))   (range_contenu=Range)? contenu=[Class] (':'label=ID)?
    |
    contenu=[Class] (range_contenu=Range)? '--*' (range_contenant=Range)? contenant=[Class] (':'label=ID)?
;

Heritage:
    contenant=[Class] (range_contenant=Range)? '<--' (range_contenu=Range)? contenu=[Class] (':'label=ID)?
    |
    contenu=[Class] (range_contenu=Range)? '-->' (range_contenant=Range)? contenant=[Class] (':'label=ID)?
;


Range:
    ((Int|'*')'..'(Int|'*'))|Int|'*'
;
Int:
    /[0-9]*/
;

Class:
    type=Class_type
    name = ID
    (
        '{'
                attributes*= Attribute
        '}'
    )?
;
Enum:
    'enum'
    name = ID
    (
        '{'
                labels*= ID
        '}'
    )?
;
Attribute:
    Method|Value
;

Class_type:
	'class' | 'abstract class' | 'interface'
;
Type:
    'float' | 'int' | 'str'
;

Value:
	(visibility=Visibility)?
	(access=Access)?
	(type=Type)?
	name=ID
;

Parameter:
    ParameterWithType | ParameterWithoutType
;

ParameterWithType: type=ID name=ID;
ParameterWithoutType: name=ID;

Method:
	(visibility=Visibility)?
	(access=Access)?
	(type=Type)?
	name=ID
	'('
	    (params+=Parameter[','])?
	')'
;

Visibility:
    '+' | '-'
;

Access:
    '{' ('static' | 'abstract') '}'
;




Package:
    'package'
    path*=ID['.']
    (
    '{'
		(
			( classes+=Class )
		|
			( packages+=Package )
		|
			( enums+=Enum )
		)*
	'}'
	)?
;